"""Routes for Q&A endpoints."""

from fastapi import APIRouter, Depends, HTTPException
from sqlalchemy.orm import Session

from ..types.schemas import AskRequest, AskResponse
from database import get_db
from ..controllers.qa_controller import QAController

router = APIRouter(tags=["QA"])


@router.post("/ask", response_model=AskResponse)
async def ask_question(request: AskRequest, db: Session = Depends(get_db)):
    """
    Accepts a question, retrieves relevant entries, and returns an answer generated by the LLM.
    Uses session management to automatically handle follow-up questions and context.
    Generates a follow-up question after answering.
    Saves the question and answer to the database.
    """
    controller = QAController(db)
    try:
        return await controller.ask_question(request)
    except ValueError as e:
        raise HTTPException(status_code=400, detail=str(e))
    except RuntimeError as e:
        raise HTTPException(status_code=502, detail=str(e))
    except Exception as e:
        raise HTTPException(status_code=500, detail=f"Internal server error: {str(e)}")

